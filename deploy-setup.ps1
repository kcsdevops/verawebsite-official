# üöÄ SCRIPT AUTOM√ÅTICO PARA DEPLOY VIA VS CODE
# =============================================
# Execute este script para preparar tudo automaticamente

param(
    [Parameter(Mandatory=$false)]
    [string]$ProjectId = "",
    
    [Parameter(Mandatory=$false)]
    [string]$Region = "us-central1"
)

Write-Host "üöÄ CONFIGURANDO DEPLOY AUTOM√ÅTICO PARA GOOGLE CLOUD RUN" -ForegroundColor Cyan
Write-Host "========================================================" -ForegroundColor Cyan

# Fun√ß√£o para verificar se comando existe
function Test-Command($command) {
    try {
        Get-Command $command -ErrorAction Stop
        return $true
    } catch {
        return $false
    }
}

# Verificar pr√©-requisitos
Write-Host "`nüìã VERIFICANDO PR√â-REQUISITOS..." -ForegroundColor Yellow

if (Test-Command "gcloud") {
    Write-Host "‚úÖ Google Cloud CLI instalado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Google Cloud CLI n√£o encontrado!" -ForegroundColor Red
    Write-Host "   Instale em: https://cloud.google.com/sdk/docs/install" -ForegroundColor Yellow
    exit 1
}

if (Test-Command "docker") {
    Write-Host "‚úÖ Docker instalado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Docker n√£o encontrado!" -ForegroundColor Red
    exit 1
}

# Verificar autentica√ß√£o
Write-Host "`nüîê VERIFICANDO AUTENTICA√á√ÉO..." -ForegroundColor Yellow

try {
    $currentAccount = gcloud auth list --filter=status:ACTIVE --format="value(account)" 2>$null
    if ($currentAccount) {
        Write-Host "‚úÖ Autenticado como: $currentAccount" -ForegroundColor Green
    } else {
        throw "N√£o autenticado"
    }
} catch {
    Write-Host "üîê Realizando autentica√ß√£o..." -ForegroundColor Yellow
    gcloud auth login
    gcloud auth application-default login
}

# Listar e selecionar projeto
if (-not $ProjectId) {
    Write-Host "`nüìÇ PROJETOS DISPON√çVEIS:" -ForegroundColor Yellow
    gcloud projects list --format="table(projectId:label=PROJECT_ID,name:label=NAME,projectNumber:label=NUMBER)"
    
    $ProjectId = Read-Host "`nDigite o PROJECT_ID que deseja usar"
}

# Configurar projeto ativo
Write-Host "`n‚öôÔ∏è CONFIGURANDO PROJETO: $ProjectId" -ForegroundColor Yellow
gcloud config set project $ProjectId
gcloud config set run/region $Region

# Habilitar APIs necess√°rias
Write-Host "`nüîå HABILITANDO APIs NECESS√ÅRIAS..." -ForegroundColor Yellow

$apis = @(
    "cloudbuild.googleapis.com",
    "run.googleapis.com", 
    "containerregistry.googleapis.com",
    "artifactregistry.googleapis.com"
)

foreach ($api in $apis) {
    Write-Host "   Habilitando $api..." -ForegroundColor Gray
    gcloud services enable $api
}

# Atualizar configura√ß√µes do Skaffold com projeto real
Write-Host "`nüìù ATUALIZANDO CONFIGURA√á√ïES..." -ForegroundColor Yellow

$skaffoldPath = "skaffold.yaml"
if (Test-Path $skaffoldPath) {
    $content = Get-Content $skaffoldPath -Raw
    $content = $content -replace 'projectid: ""', "projectid: `"$ProjectId`""
    Set-Content $skaffoldPath $content
    Write-Host "‚úÖ Skaffold.yaml atualizado com projeto: $ProjectId" -ForegroundColor Green
}

# Criar .env para desenvolvimento local
Write-Host "`nüåê CRIANDO ARQUIVO .ENV..." -ForegroundColor Yellow
$envContent = @"
NODE_ENV=production
PORT=8080
GOOGLE_CLOUD_PROJECT=$ProjectId
GOOGLE_CLOUD_REGION=$Region
"@

Set-Content ".env.cloud" $envContent
Write-Host "‚úÖ Arquivo .env.cloud criado" -ForegroundColor Green

Write-Host "`nüéâ CONFIGURA√á√ÉO COMPLETA!" -ForegroundColor Green
Write-Host "========================" -ForegroundColor Green
Write-Host ""
Write-Host "üìñ PR√ìXIMOS PASSOS:" -ForegroundColor Cyan
Write-Host "1. Abra Command Palette: Ctrl + Shift + P" -ForegroundColor White
Write-Host "2. Digite: 'Cloud Code: Deploy to Cloud Run'" -ForegroundColor White  
Write-Host "3. Siga o assistente autom√°tico" -ForegroundColor White
Write-Host ""
Write-Host "üß™ PARA TESTAR LOCALMENTE:" -ForegroundColor Cyan
Write-Host "1. Command Palette: Ctrl + Shift + P" -ForegroundColor White
Write-Host "2. Digite: 'Cloud Code: Run on Cloud Run Emulator'" -ForegroundColor White
Write-Host ""
Write-Host "üìä PROJETO CONFIGURADO:" -ForegroundColor Cyan
Write-Host "   Projeto: $ProjectId" -ForegroundColor White
Write-Host "   Regi√£o: $Region" -ForegroundColor White
Write-Host "   Servi√ßo: veracare-podologia" -ForegroundColor White
Write-Host ""
Write-Host "üîó URLs √öTEIS:" -ForegroundColor Cyan
Write-Host "   Console: https://console.cloud.google.com/run?project=$ProjectId" -ForegroundColor White
Write-Host "   Logs: https://console.cloud.google.com/logs?project=$ProjectId" -ForegroundColor White

# Abrir VS Code Command Palette automaticamente
Write-Host "`nüöÄ Abrindo VS Code para deploy..." -ForegroundColor Green
Start-Sleep 2
code .